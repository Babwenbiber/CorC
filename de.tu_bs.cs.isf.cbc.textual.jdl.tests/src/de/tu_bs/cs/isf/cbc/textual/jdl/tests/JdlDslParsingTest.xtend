/*
 * generated by Xtext 2.25.0
 */
package de.tu_bs.cs.isf.cbc.textual.jdl.tests

import com.google.inject.Inject
import de.tu_bs.cs.isf.cbc.textual.jdl.jdlDsl.Model
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(JdlDslInjectorProvider)
class JdlDslParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
@Test
	def void loadModel() {
		execTest('''
						(x => y) | z & y()

		''')
		
		execTest('''
						(\foreach int x; y => x)

		''')
		execTest('''
						(\foreach String x; y > x)

		''')
		execTest('''
						(\foreach House x; x > i => y < x)

		''')
		execTest('''
						x = true

		''')
		execTest('''
						(\foreach int x; (\exists int y; y > x & y = 5))

		''')
		execTest('''
						(\foreach int x; (\exists int y; y > x & func(x,y) = true))

		''')
		execTest('''
						x = 10

		''')
	}
	
	def void execTest(String str) {
		val result = parseHelper.parse(str)
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
