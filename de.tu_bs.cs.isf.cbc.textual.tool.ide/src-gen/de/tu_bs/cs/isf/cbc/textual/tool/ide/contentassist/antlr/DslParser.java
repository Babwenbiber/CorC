/*
 * generated by Xtext 2.25.0
 */
package de.tu_bs.cs.isf.cbc.textual.tool.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.tu_bs.cs.isf.cbc.textual.tool.ide.contentassist.antlr.internal.InternalDslParser;
import de.tu_bs.cs.isf.cbc.textual.tool.services.DslGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class DslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(DslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, DslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getCbCProblemAccess().getAlternatives(), "rule__CbCProblem__Alternatives");
			builder.put(grammarAccess.getAbstractStatementAccess().getAlternatives(), "rule__AbstractStatement__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getCodeStringAccess().getAlternatives_1_1(), "rule__CodeString__Alternatives_1_1");
			builder.put(grammarAccess.getCodeStringAccess().getAlternatives_4(), "rule__CodeString__Alternatives_4");
			builder.put(grammarAccess.getCodeStringAccess().getAlternatives_5_2(), "rule__CodeString__Alternatives_5_2");
			builder.put(grammarAccess.getVariableStringAccess().getAlternatives_2(), "rule__VariableString__Alternatives_2");
			builder.put(grammarAccess.getVariableStringAccess().getAlternatives_2_0_0_1_0(), "rule__VariableString__Alternatives_2_0_0_1_0");
			builder.put(grammarAccess.getVariableStringAccess().getAlternatives_2_0_0_1_1_1(), "rule__VariableString__Alternatives_2_0_0_1_1_1");
			builder.put(grammarAccess.getVariableStringAccess().getAlternatives_2_1_0_1(), "rule__VariableString__Alternatives_2_1_0_1");
			builder.put(grammarAccess.getOperationAccess().getAlternatives(), "rule__Operation__Alternatives");
			builder.put(grammarAccess.getInlineBlockStatementAccess().getAlternatives(), "rule__InlineBlockStatement__Alternatives");
			builder.put(grammarAccess.getForeachAccess().getAlternatives(), "rule__Foreach__Alternatives");
			builder.put(grammarAccess.getExistsAccess().getAlternatives(), "rule__Exists__Alternatives");
			builder.put(grammarAccess.getRelationAccess().getAlternatives_1_0(), "rule__Relation__Alternatives_1_0");
			builder.put(grammarAccess.getConcatAccess().getAlternatives_1_0(), "rule__Concat__Alternatives_1_0");
			builder.put(grammarAccess.getMultiMathOperationAccess().getAlternatives_1_0(), "rule__MultiMathOperation__Alternatives_1_0");
			builder.put(grammarAccess.getAddMathOperationAccess().getAlternatives_1_0(), "rule__AddMathOperation__Alternatives_1_0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getAlternatives_0_1_0(), "rule__PrimaryExpression__Alternatives_0_1_0");
			builder.put(grammarAccess.getXJStatementOrBlockAccess().getAlternatives(), "rule__XJStatementOrBlock__Alternatives");
			builder.put(grammarAccess.getXImportDeclarationAccess().getAlternatives_1(), "rule__XImportDeclaration__Alternatives_1");
			builder.put(grammarAccess.getXImportDeclarationAccess().getAlternatives_1_0_2(), "rule__XImportDeclaration__Alternatives_1_0_2");
			builder.put(grammarAccess.getXJSingleStatementAccess().getAlternatives(), "rule__XJSingleStatement__Alternatives");
			builder.put(grammarAccess.getXJSemicolonStatementAccess().getExpressionAlternatives_1_0(), "rule__XJSemicolonStatement__ExpressionAlternatives_1_0");
			builder.put(grammarAccess.getXJBranchingStatementAccess().getAlternatives(), "rule__XJBranchingStatement__Alternatives");
			builder.put(grammarAccess.getXAssignmentAccess().getAlternatives(), "rule__XAssignment__Alternatives");
			builder.put(grammarAccess.getXAssignmentAccess().getAlternatives_2_1(), "rule__XAssignment__Alternatives_2_1");
			builder.put(grammarAccess.getOpMultiAssignAccess().getAlternatives(), "rule__OpMultiAssign__Alternatives");
			builder.put(grammarAccess.getXCastedExpressionAccess().getAlternatives(), "rule__XCastedExpression__Alternatives");
			builder.put(grammarAccess.getXPostfixOperationAccess().getAlternatives(), "rule__XPostfixOperation__Alternatives");
			builder.put(grammarAccess.getXPostfixOperationAccess().getAlternatives_1_1(), "rule__XPostfixOperation__Alternatives_1_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1(), "rule__XMemberFeatureCall__Alternatives_1");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getAlternatives_3(), "rule__XTryCatchFinallyExpression__Alternatives_3");
			builder.put(grammarAccess.getXPrimaryExpressionAccess().getAlternatives(), "rule__XPrimaryExpression__Alternatives");
			builder.put(grammarAccess.getXLiteralAccess().getAlternatives(), "rule__XLiteral__Alternatives");
			builder.put(grammarAccess.getOpEqualityAccess().getAlternatives(), "rule__OpEquality__Alternatives");
			builder.put(grammarAccess.getOpMultiAccess().getAlternatives(), "rule__OpMulti__Alternatives");
			builder.put(grammarAccess.getOpOtherAccess().getAlternatives(), "rule__OpOther__Alternatives");
			builder.put(grammarAccess.getOpOtherAccess().getAlternatives_0_1(), "rule__OpOther__Alternatives_0_1");
			builder.put(grammarAccess.getOpUnaryAccess().getAlternatives(), "rule__OpUnary__Alternatives");
			builder.put(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getAlternatives(), "rule__XAnnotationElementValueOrCommaList__Alternatives");
			builder.put(grammarAccess.getXAnnotationElementValueAccess().getAlternatives(), "rule__XAnnotationElementValue__Alternatives");
			builder.put(grammarAccess.getXAnnotationAccess().getAlternatives_3_1(), "rule__XAnnotation__Alternatives_3_1");
			builder.put(grammarAccess.getXAnnotationOrExpressionAccess().getAlternatives(), "rule__XAnnotationOrExpression__Alternatives");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1(), "rule__XRelationalExpression__Alternatives_1");
			builder.put(grammarAccess.getOpCompareAccess().getAlternatives(), "rule__OpCompare__Alternatives");
			builder.put(grammarAccess.getOpAddAccess().getAlternatives(), "rule__OpAdd__Alternatives");
			builder.put(grammarAccess.getXUnaryOperationAccess().getAlternatives(), "rule__XUnaryOperation__Alternatives");
			builder.put(grammarAccess.getOpPostfixAccess().getAlternatives(), "rule__OpPostfix__Alternatives");
			builder.put(grammarAccess.getXCollectionLiteralAccess().getAlternatives(), "rule__XCollectionLiteral__Alternatives");
			builder.put(grammarAccess.getXExpressionOrVarDeclarationAccess().getAlternatives(), "rule__XExpressionOrVarDeclaration__Alternatives");
			builder.put(grammarAccess.getFeatureCallIDAccess().getAlternatives(), "rule__FeatureCallID__Alternatives");
			builder.put(grammarAccess.getIdOrSuperAccess().getAlternatives(), "rule__IdOrSuper__Alternatives");
			builder.put(grammarAccess.getXBooleanLiteralAccess().getAlternatives_1(), "rule__XBooleanLiteral__Alternatives_1");
			builder.put(grammarAccess.getNumberAccess().getAlternatives(), "rule__Number__Alternatives");
			builder.put(grammarAccess.getNumberAccess().getAlternatives_1_0(), "rule__Number__Alternatives_1_0");
			builder.put(grammarAccess.getNumberAccess().getAlternatives_1_1_1(), "rule__Number__Alternatives_1_1_1");
			builder.put(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives(), "rule__JvmArgumentTypeReference__Alternatives");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2(), "rule__JvmWildcardTypeReference__Alternatives_2");
			builder.put(grammarAccess.getCbCFormulaAccess().getGroup(), "rule__CbCFormula__Group__0");
			builder.put(grammarAccess.getCodeStringAccess().getGroup(), "rule__CodeString__Group__0");
			builder.put(grammarAccess.getCodeStringAccess().getGroup_1(), "rule__CodeString__Group_1__0");
			builder.put(grammarAccess.getCodeStringAccess().getGroup_4_1(), "rule__CodeString__Group_4_1__0");
			builder.put(grammarAccess.getCodeStringAccess().getGroup_5(), "rule__CodeString__Group_5__0");
			builder.put(grammarAccess.getCodeStringAccess().getGroup_5_2_1(), "rule__CodeString__Group_5_2_1__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup(), "rule__VariableString__Group__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_0(), "rule__VariableString__Group_2_0__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_0_0(), "rule__VariableString__Group_2_0_0__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_0_0_1(), "rule__VariableString__Group_2_0_0_1__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_0_0_1_0_1(), "rule__VariableString__Group_2_0_0_1_0_1__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_0_0_1_1(), "rule__VariableString__Group_2_0_0_1_1__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_0_0_1_1_1_1(), "rule__VariableString__Group_2_0_0_1_1_1_1__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_0_1(), "rule__VariableString__Group_2_0_1__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_1(), "rule__VariableString__Group_2_1__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_1_0(), "rule__VariableString__Group_2_1_0__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_1_0_1_1(), "rule__VariableString__Group_2_1_0_1_1__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_1_1(), "rule__VariableString__Group_2_1_1__0");
			builder.put(grammarAccess.getVariableStringAccess().getGroup_2_2(), "rule__VariableString__Group_2_2__0");
			builder.put(grammarAccess.getAbstractStatement_ImplAccess().getGroup(), "rule__AbstractStatement_Impl__Group__0");
			builder.put(grammarAccess.getMethodStatementAccess().getGroup(), "rule__MethodStatement__Group__0");
			builder.put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
			builder.put(grammarAccess.getStrengthWeakStatementAccess().getGroup(), "rule__StrengthWeakStatement__Group__0");
			builder.put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
			builder.put(grammarAccess.getCompositionStatementAccess().getGroup(), "rule__CompositionStatement__Group__0");
			builder.put(grammarAccess.getJavaStatementAccess().getGroup(), "rule__JavaStatement__Group__0");
			builder.put(grammarAccess.getJMLAnnotationAccess().getGroup_0(), "rule__JMLAnnotation__Group_0__0");
			builder.put(grammarAccess.getJMLAnnotationAccess().getGroup_1(), "rule__JMLAnnotation__Group_1__0");
			builder.put(grammarAccess.getInlineBlockStatementAccess().getGroup_0(), "rule__InlineBlockStatement__Group_0__0");
			builder.put(grammarAccess.getInlineBlockStatementAccess().getGroup_1(), "rule__InlineBlockStatement__Group_1__0");
			builder.put(grammarAccess.getBlockStatementAccess().getGroup(), "rule__BlockStatement__Group__0");
			builder.put(grammarAccess.getSelectionStatementAccess().getGroup(), "rule__SelectionStatement__Group__0");
			builder.put(grammarAccess.getSelectionStatementAccess().getGroup_9(), "rule__SelectionStatement__Group_9__0");
			builder.put(grammarAccess.getSmallRepetitionStatementAccess().getGroup(), "rule__SmallRepetitionStatement__Group__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getVariantAccess().getGroup(), "rule__Variant__Group__0");
			builder.put(grammarAccess.getJavaVariablesAccess().getGroup(), "rule__JavaVariables__Group__0");
			builder.put(grammarAccess.getJavaVariablesAccess().getGroup_2(), "rule__JavaVariables__Group_2__0");
			builder.put(grammarAccess.getJavaVariablesAccess().getGroup_2_3(), "rule__JavaVariables__Group_2_3__0");
			builder.put(grammarAccess.getJavaVariableAccess().getGroup(), "rule__JavaVariable__Group__0");
			builder.put(grammarAccess.getGlobalConditionsAccess().getGroup(), "rule__GlobalConditions__Group__0");
			builder.put(grammarAccess.getGlobalConditionsAccess().getGroup_2(), "rule__GlobalConditions__Group_2__0");
			builder.put(grammarAccess.getGlobalConditionsAccess().getGroup_2_3(), "rule__GlobalConditions__Group_2_3__0");
			builder.put(grammarAccess.getRenamingAccess().getGroup(), "rule__Renaming__Group__0");
			builder.put(grammarAccess.getRenamingAccess().getGroup_2(), "rule__Renaming__Group_2__0");
			builder.put(grammarAccess.getRenameAccess().getGroup(), "rule__Rename__Group__0");
			builder.put(grammarAccess.getForeachAccess().getGroup_1(), "rule__Foreach__Group_1__0");
			builder.put(grammarAccess.getExistsAccess().getGroup_1(), "rule__Exists__Group_1__0");
			builder.put(grammarAccess.getRelationAccess().getGroup(), "rule__Relation__Group__0");
			builder.put(grammarAccess.getRelationAccess().getGroup_1(), "rule__Relation__Group_1__0");
			builder.put(grammarAccess.getRelationAccess().getGroup_1_0_0(), "rule__Relation__Group_1_0_0__0");
			builder.put(grammarAccess.getRelationAccess().getGroup_1_0_1(), "rule__Relation__Group_1_0_1__0");
			builder.put(grammarAccess.getRelationAccess().getGroup_1_0_2(), "rule__Relation__Group_1_0_2__0");
			builder.put(grammarAccess.getRelationAccess().getGroup_1_0_3(), "rule__Relation__Group_1_0_3__0");
			builder.put(grammarAccess.getRelationAccess().getGroup_1_0_4(), "rule__Relation__Group_1_0_4__0");
			builder.put(grammarAccess.getImplicationAccess().getGroup(), "rule__Implication__Group__0");
			builder.put(grammarAccess.getImplicationAccess().getGroup_1(), "rule__Implication__Group_1__0");
			builder.put(grammarAccess.getImplicationAccess().getGroup_1_0(), "rule__Implication__Group_1_0__0");
			builder.put(grammarAccess.getConcatAccess().getGroup(), "rule__Concat__Group__0");
			builder.put(grammarAccess.getConcatAccess().getGroup_1(), "rule__Concat__Group_1__0");
			builder.put(grammarAccess.getConcatAccess().getGroup_1_0_0(), "rule__Concat__Group_1_0_0__0");
			builder.put(grammarAccess.getConcatAccess().getGroup_1_0_1(), "rule__Concat__Group_1_0_1__0");
			builder.put(grammarAccess.getMultiMathOperationAccess().getGroup(), "rule__MultiMathOperation__Group__0");
			builder.put(grammarAccess.getMultiMathOperationAccess().getGroup_1(), "rule__MultiMathOperation__Group_1__0");
			builder.put(grammarAccess.getMultiMathOperationAccess().getGroup_1_0_0(), "rule__MultiMathOperation__Group_1_0_0__0");
			builder.put(grammarAccess.getMultiMathOperationAccess().getGroup_1_0_1(), "rule__MultiMathOperation__Group_1_0_1__0");
			builder.put(grammarAccess.getMultiMathOperationAccess().getGroup_1_0_2(), "rule__MultiMathOperation__Group_1_0_2__0");
			builder.put(grammarAccess.getAddMathOperationAccess().getGroup(), "rule__AddMathOperation__Group__0");
			builder.put(grammarAccess.getAddMathOperationAccess().getGroup_1(), "rule__AddMathOperation__Group_1__0");
			builder.put(grammarAccess.getAddMathOperationAccess().getGroup_1_0_0(), "rule__AddMathOperation__Group_1_0_0__0");
			builder.put(grammarAccess.getAddMathOperationAccess().getGroup_1_0_1(), "rule__AddMathOperation__Group_1_0_1__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_0(), "rule__PrimaryExpression__Group_0__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_0_1(), "rule__PrimaryExpression__Group_0_1__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_1(), "rule__PrimaryExpression__Group_1__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_2(), "rule__PrimaryExpression__Group_2__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_2_2(), "rule__PrimaryExpression__Group_2_2__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_2_2_1(), "rule__PrimaryExpression__Group_2_2_1__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_2_2_1_1(), "rule__PrimaryExpression__Group_2_2_1_1__0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getGroup_3(), "rule__PrimaryExpression__Group_3__0");
			builder.put(grammarAccess.getXImportDeclarationAccess().getGroup(), "rule__XImportDeclaration__Group__0");
			builder.put(grammarAccess.getXImportDeclarationAccess().getGroup_1_0(), "rule__XImportDeclaration__Group_1_0__0");
			builder.put(grammarAccess.getJvmTypeReferenceAccess().getGroup(), "rule__JvmTypeReference__Group__0");
			builder.put(grammarAccess.getJvmTypeReferenceAccess().getGroup_1(), "rule__JvmTypeReference__Group_1__0");
			builder.put(grammarAccess.getJvmTypeReferenceAccess().getGroup_1_0(), "rule__JvmTypeReference__Group_1_0__0");
			builder.put(grammarAccess.getFullJvmFormalParameterAccess().getGroup(), "rule__FullJvmFormalParameter__Group__0");
			builder.put(grammarAccess.getXJSemicolonStatementAccess().getGroup(), "rule__XJSemicolonStatement__Group__0");
			builder.put(grammarAccess.getXJEmptyStatementAccess().getGroup(), "rule__XJEmptyStatement__Group__0");
			builder.put(grammarAccess.getXJBranchingStatementAccess().getGroup_0(), "rule__XJBranchingStatement__Group_0__0");
			builder.put(grammarAccess.getXJBranchingStatementAccess().getGroup_1(), "rule__XJBranchingStatement__Group_1__0");
			builder.put(grammarAccess.getXBlockExpressionAccess().getGroup(), "rule__XBlockExpression__Group__0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getGroup(), "rule__XVariableDeclaration__Group__0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getGroup_0(), "rule__XVariableDeclaration__Group_0__0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getGroup_0_0(), "rule__XVariableDeclaration__Group_0_0__0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getGroup_1(), "rule__XVariableDeclaration__Group_1__0");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getGroup_2(), "rule__XVariableDeclaration__Group_2__0");
			builder.put(grammarAccess.getXJAdditionalXVariableDeclarationAccess().getGroup(), "rule__XJAdditionalXVariableDeclaration__Group__0");
			builder.put(grammarAccess.getXJAdditionalXVariableDeclarationAccess().getGroup_2(), "rule__XJAdditionalXVariableDeclaration__Group_2__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_0(), "rule__XAssignment__Group_0__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_0_0(), "rule__XAssignment__Group_0_0__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_0_0_0(), "rule__XAssignment__Group_0_0_0__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_0_0_0_5(), "rule__XAssignment__Group_0_0_0_5__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_1(), "rule__XAssignment__Group_1__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_1_0(), "rule__XAssignment__Group_1_0__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_1_0_0(), "rule__XAssignment__Group_1_0_0__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_2(), "rule__XAssignment__Group_2__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_2_1_0(), "rule__XAssignment__Group_2_1_0__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_2_1_0_0(), "rule__XAssignment__Group_2_1_0_0__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_2_1_0_0_0(), "rule__XAssignment__Group_2_1_0_0_0__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_2_1_1(), "rule__XAssignment__Group_2_1_1__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_2_1_1_0(), "rule__XAssignment__Group_2_1_1_0__0");
			builder.put(grammarAccess.getXAssignmentAccess().getGroup_2_1_1_0_0(), "rule__XAssignment__Group_2_1_1_0_0__0");
			builder.put(grammarAccess.getOpMultiAssignAccess().getGroup_8(), "rule__OpMultiAssign__Group_8__0");
			builder.put(grammarAccess.getOpMultiAssignAccess().getGroup_9(), "rule__OpMultiAssign__Group_9__0");
			builder.put(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getGroup(), "rule__XJFeatureCallWithArrayAccess__Group__0");
			builder.put(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getGroup_1(), "rule__XJFeatureCallWithArrayAccess__Group_1__0");
			builder.put(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getGroup_1_0(), "rule__XJFeatureCallWithArrayAccess__Group_1_0__0");
			builder.put(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getGroup_1_0_4(), "rule__XJFeatureCallWithArrayAccess__Group_1_0_4__0");
			builder.put(grammarAccess.getXFeatureCallAccess().getGroup(), "rule__XFeatureCall__Group__0");
			builder.put(grammarAccess.getXFeatureCallAccess().getGroup_2(), "rule__XFeatureCall__Group_2__0");
			builder.put(grammarAccess.getXFeatureCallAccess().getGroup_2_1(), "rule__XFeatureCall__Group_2_1__0");
			builder.put(grammarAccess.getXFeatureCallAccess().getGroup_2_1_1(), "rule__XFeatureCall__Group_2_1_1__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup(), "rule__XConstructorCall__Group__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup_3(), "rule__XConstructorCall__Group_3__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup_3_1(), "rule__XConstructorCall__Group_3_1__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup_3_1_1(), "rule__XConstructorCall__Group_3_1_1__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup_4(), "rule__XConstructorCall__Group_4__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup_4_1(), "rule__XConstructorCall__Group_4_1__0");
			builder.put(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1(), "rule__XConstructorCall__Group_4_1_1__0");
			builder.put(grammarAccess.getXJArrayConstructorCallAccess().getGroup(), "rule__XJArrayConstructorCall__Group__0");
			builder.put(grammarAccess.getXJArrayConstructorCallAccess().getGroup_0(), "rule__XJArrayConstructorCall__Group_0__0");
			builder.put(grammarAccess.getXJArrayConstructorCallAccess().getGroup_0_0(), "rule__XJArrayConstructorCall__Group_0_0__0");
			builder.put(grammarAccess.getXJArrayConstructorCallAccess().getGroup_3(), "rule__XJArrayConstructorCall__Group_3__0");
			builder.put(grammarAccess.getXJArrayDimensionAccess().getGroup(), "rule__XJArrayDimension__Group__0");
			builder.put(grammarAccess.getXCastedExpressionAccess().getGroup_0(), "rule__XCastedExpression__Group_0__0");
			builder.put(grammarAccess.getXCastedExpressionAccess().getGroup_0_0(), "rule__XCastedExpression__Group_0_0__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup_0(), "rule__XPostfixOperation__Group_0__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup_0_0(), "rule__XPostfixOperation__Group_0_0__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup_0_0_0(), "rule__XPostfixOperation__Group_0_0_0__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup_1(), "rule__XPostfixOperation__Group_1__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup_1_1_0(), "rule__XPostfixOperation__Group_1_1_0__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup_1_1_0_0(), "rule__XPostfixOperation__Group_1_1_0_0__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup_1_1_1(), "rule__XPostfixOperation__Group_1_1_1__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup_1_1_1_0(), "rule__XPostfixOperation__Group_1_1_1_0__0");
			builder.put(grammarAccess.getXPostfixOperationAccess().getGroup_1_1_1_0_4(), "rule__XPostfixOperation__Group_1_1_1_0_4__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup(), "rule__XMemberFeatureCall__Group__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0(), "rule__XMemberFeatureCall__Group_1_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0(), "rule__XMemberFeatureCall__Group_1_0_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1(), "rule__XMemberFeatureCall__Group_1_1__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0(), "rule__XMemberFeatureCall__Group_1_1_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0_0(), "rule__XMemberFeatureCall__Group_1_1_0_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_2(), "rule__XMemberFeatureCall__Group_1_2__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_2_0(), "rule__XMemberFeatureCall__Group_1_2_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_2_0_0(), "rule__XMemberFeatureCall__Group_1_2_0_0__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_2_2(), "rule__XMemberFeatureCall__Group_1_2_2__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_2_2_1(), "rule__XMemberFeatureCall__Group_1_2_2_1__0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_2_2_1_1(), "rule__XMemberFeatureCall__Group_1_2_2_1_1__0");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getGroup(), "rule__XForLoopExpression__Group__0");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getGroup_0(), "rule__XForLoopExpression__Group_0__0");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getGroup_0_0(), "rule__XForLoopExpression__Group_0_0__0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getGroup(), "rule__XBasicForLoopExpression__Group__0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_3(), "rule__XBasicForLoopExpression__Group_3__0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_3_1(), "rule__XBasicForLoopExpression__Group_3_1__0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_7(), "rule__XBasicForLoopExpression__Group_7__0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_7_1(), "rule__XBasicForLoopExpression__Group_7_1__0");
			builder.put(grammarAccess.getXIfExpressionAccess().getGroup(), "rule__XIfExpression__Group__0");
			builder.put(grammarAccess.getXIfExpressionAccess().getGroup_6(), "rule__XIfExpression__Group_6__0");
			builder.put(grammarAccess.getXWhileExpressionAccess().getGroup(), "rule__XWhileExpression__Group__0");
			builder.put(grammarAccess.getXDoWhileExpressionAccess().getGroup(), "rule__XDoWhileExpression__Group__0");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getGroup(), "rule__XSwitchExpression__Group__0");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getGroup_7(), "rule__XSwitchExpression__Group_7__0");
			builder.put(grammarAccess.getXCasePartAccess().getGroup(), "rule__XCasePart__Group__0");
			builder.put(grammarAccess.getXJSwitchStatementsAccess().getGroup(), "rule__XJSwitchStatements__Group__0");
			builder.put(grammarAccess.getXJTryWithResourcesStatementAccess().getGroup(), "rule__XJTryWithResourcesStatement__Group__0");
			builder.put(grammarAccess.getXJTryWithResourcesStatementAccess().getGroup_0(), "rule__XJTryWithResourcesStatement__Group_0__0");
			builder.put(grammarAccess.getXJTryWithResourcesStatementAccess().getGroup_0_0(), "rule__XJTryWithResourcesStatement__Group_0_0__0");
			builder.put(grammarAccess.getXJTryWithResourcesStatementAccess().getGroup_5(), "rule__XJTryWithResourcesStatement__Group_5__0");
			builder.put(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getGroup(), "rule__XJTryWithResourcesVariableDeclaration__Group__0");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup(), "rule__XTryCatchFinallyExpression__Group__0");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0(), "rule__XTryCatchFinallyExpression__Group_3_0__0");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0_1(), "rule__XTryCatchFinallyExpression__Group_3_0_1__0");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_1(), "rule__XTryCatchFinallyExpression__Group_3_1__0");
			builder.put(grammarAccess.getXCatchClauseAccess().getGroup(), "rule__XCatchClause__Group__0");
			builder.put(grammarAccess.getXSynchronizedExpressionAccess().getGroup(), "rule__XSynchronizedExpression__Group__0");
			builder.put(grammarAccess.getXSynchronizedExpressionAccess().getGroup_0(), "rule__XSynchronizedExpression__Group_0__0");
			builder.put(grammarAccess.getXSynchronizedExpressionAccess().getGroup_0_0(), "rule__XSynchronizedExpression__Group_0_0__0");
			builder.put(grammarAccess.getXJArrayLiteralAccess().getGroup(), "rule__XJArrayLiteral__Group__0");
			builder.put(grammarAccess.getXJArrayLiteralAccess().getGroup_2(), "rule__XJArrayLiteral__Group_2__0");
			builder.put(grammarAccess.getXJArrayLiteralAccess().getGroup_2_1(), "rule__XJArrayLiteral__Group_2_1__0");
			builder.put(grammarAccess.getXCharLiteralAccess().getGroup(), "rule__XCharLiteral__Group__0");
			builder.put(grammarAccess.getXStringLiteralAccess().getGroup(), "rule__XStringLiteral__Group__0");
			builder.put(grammarAccess.getOpOtherAccess().getGroup_0(), "rule__OpOther__Group_0__0");
			builder.put(grammarAccess.getOpOtherAccess().getGroup_0_1_0(), "rule__OpOther__Group_0_1_0__0");
			builder.put(grammarAccess.getOpOtherAccess().getGroup_0_1_0_0(), "rule__OpOther__Group_0_1_0_0__0");
			builder.put(grammarAccess.getXAndExpressionAccess().getGroup(), "rule__XAndExpression__Group__0");
			builder.put(grammarAccess.getXAndExpressionAccess().getGroup_1(), "rule__XAndExpression__Group_1__0");
			builder.put(grammarAccess.getXAndExpressionAccess().getGroup_1_0(), "rule__XAndExpression__Group_1_0__0");
			builder.put(grammarAccess.getXAndExpressionAccess().getGroup_1_0_0(), "rule__XAndExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getGroup(), "rule__XBitwiseInclusiveOrExpression__Group__0");
			builder.put(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getGroup_1(), "rule__XBitwiseInclusiveOrExpression__Group_1__0");
			builder.put(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getGroup_1_0(), "rule__XBitwiseInclusiveOrExpression__Group_1_0__0");
			builder.put(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getGroup_1_0_0(), "rule__XBitwiseInclusiveOrExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getGroup(), "rule__XBitwiseExclusiveOrExpression__Group__0");
			builder.put(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getGroup_1(), "rule__XBitwiseExclusiveOrExpression__Group_1__0");
			builder.put(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getGroup_1_0(), "rule__XBitwiseExclusiveOrExpression__Group_1_0__0");
			builder.put(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getGroup_1_0_0(), "rule__XBitwiseExclusiveOrExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXBitwiseAndExpressionAccess().getGroup(), "rule__XBitwiseAndExpression__Group__0");
			builder.put(grammarAccess.getXBitwiseAndExpressionAccess().getGroup_1(), "rule__XBitwiseAndExpression__Group_1__0");
			builder.put(grammarAccess.getXBitwiseAndExpressionAccess().getGroup_1_0(), "rule__XBitwiseAndExpression__Group_1_0__0");
			builder.put(grammarAccess.getXBitwiseAndExpressionAccess().getGroup_1_0_0(), "rule__XBitwiseAndExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getGroup_0(), "rule__XAnnotationElementValueOrCommaList__Group_0__0");
			builder.put(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getGroup_0_0(), "rule__XAnnotationElementValueOrCommaList__Group_0_0__0");
			builder.put(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getGroup_0_0_0(), "rule__XAnnotationElementValueOrCommaList__Group_0_0_0__0");
			builder.put(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getGroup_0_1(), "rule__XAnnotationElementValueOrCommaList__Group_0_1__0");
			builder.put(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getGroup_0_1_1(), "rule__XAnnotationElementValueOrCommaList__Group_0_1_1__0");
			builder.put(grammarAccess.getXAnnotationElementValueAccess().getGroup_0(), "rule__XAnnotationElementValue__Group_0__0");
			builder.put(grammarAccess.getXAnnotationElementValueAccess().getGroup_0_0(), "rule__XAnnotationElementValue__Group_0_0__0");
			builder.put(grammarAccess.getXAnnotationElementValueAccess().getGroup_0_0_0(), "rule__XAnnotationElementValue__Group_0_0_0__0");
			builder.put(grammarAccess.getXAnnotationElementValueAccess().getGroup_0_1(), "rule__XAnnotationElementValue__Group_0_1__0");
			builder.put(grammarAccess.getXAnnotationElementValueAccess().getGroup_0_1_1(), "rule__XAnnotationElementValue__Group_0_1_1__0");
			builder.put(grammarAccess.getXAnnotationAccess().getGroup(), "rule__XAnnotation__Group__0");
			builder.put(grammarAccess.getXAnnotationAccess().getGroup_3(), "rule__XAnnotation__Group_3__0");
			builder.put(grammarAccess.getXAnnotationAccess().getGroup_3_1_0(), "rule__XAnnotation__Group_3_1_0__0");
			builder.put(grammarAccess.getXAnnotationAccess().getGroup_3_1_0_1(), "rule__XAnnotation__Group_3_1_0_1__0");
			builder.put(grammarAccess.getXAnnotationElementValuePairAccess().getGroup(), "rule__XAnnotationElementValuePair__Group__0");
			builder.put(grammarAccess.getXAnnotationElementValuePairAccess().getGroup_0(), "rule__XAnnotationElementValuePair__Group_0__0");
			builder.put(grammarAccess.getXAnnotationElementValuePairAccess().getGroup_0_0(), "rule__XAnnotationElementValuePair__Group_0_0__0");
			builder.put(grammarAccess.getXOrExpressionAccess().getGroup(), "rule__XOrExpression__Group__0");
			builder.put(grammarAccess.getXOrExpressionAccess().getGroup_1(), "rule__XOrExpression__Group_1__0");
			builder.put(grammarAccess.getXOrExpressionAccess().getGroup_1_0(), "rule__XOrExpression__Group_1_0__0");
			builder.put(grammarAccess.getXOrExpressionAccess().getGroup_1_0_0(), "rule__XOrExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getGroup(), "rule__XEqualityExpression__Group__0");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getGroup_1(), "rule__XEqualityExpression__Group_1__0");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0(), "rule__XEqualityExpression__Group_1_0__0");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0_0(), "rule__XEqualityExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup(), "rule__XRelationalExpression__Group__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0(), "rule__XRelationalExpression__Group_1_0__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0(), "rule__XRelationalExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0_0(), "rule__XRelationalExpression__Group_1_0_0_0__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1(), "rule__XRelationalExpression__Group_1_1__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0(), "rule__XRelationalExpression__Group_1_1_0__0");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0_0(), "rule__XRelationalExpression__Group_1_1_0_0__0");
			builder.put(grammarAccess.getOpCompareAccess().getGroup_1(), "rule__OpCompare__Group_1__0");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup(), "rule__XOtherOperatorExpression__Group__0");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1(), "rule__XOtherOperatorExpression__Group_1__0");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0(), "rule__XOtherOperatorExpression__Group_1_0__0");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0_0(), "rule__XOtherOperatorExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getGroup(), "rule__XAdditiveExpression__Group__0");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getGroup_1(), "rule__XAdditiveExpression__Group_1__0");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0(), "rule__XAdditiveExpression__Group_1_0__0");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0_0(), "rule__XAdditiveExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup(), "rule__XMultiplicativeExpression__Group__0");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1(), "rule__XMultiplicativeExpression__Group_1__0");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0(), "rule__XMultiplicativeExpression__Group_1_0__0");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0_0(), "rule__XMultiplicativeExpression__Group_1_0_0__0");
			builder.put(grammarAccess.getXUnaryOperationAccess().getGroup_0(), "rule__XUnaryOperation__Group_0__0");
			builder.put(grammarAccess.getXSetLiteralAccess().getGroup(), "rule__XSetLiteral__Group__0");
			builder.put(grammarAccess.getXSetLiteralAccess().getGroup_3(), "rule__XSetLiteral__Group_3__0");
			builder.put(grammarAccess.getXSetLiteralAccess().getGroup_3_1(), "rule__XSetLiteral__Group_3_1__0");
			builder.put(grammarAccess.getXListLiteralAccess().getGroup(), "rule__XListLiteral__Group__0");
			builder.put(grammarAccess.getXListLiteralAccess().getGroup_3(), "rule__XListLiteral__Group_3__0");
			builder.put(grammarAccess.getXListLiteralAccess().getGroup_3_1(), "rule__XListLiteral__Group_3_1__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup(), "rule__XClosure__Group__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_0(), "rule__XClosure__Group_0__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_0_0(), "rule__XClosure__Group_0_0__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_1(), "rule__XClosure__Group_1__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_1_0(), "rule__XClosure__Group_1_0__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_1_0_0(), "rule__XClosure__Group_1_0_0__0");
			builder.put(grammarAccess.getXClosureAccess().getGroup_1_0_0_1(), "rule__XClosure__Group_1_0_0_1__0");
			builder.put(grammarAccess.getXExpressionInClosureAccess().getGroup(), "rule__XExpressionInClosure__Group__0");
			builder.put(grammarAccess.getXExpressionInClosureAccess().getGroup_1(), "rule__XExpressionInClosure__Group_1__0");
			builder.put(grammarAccess.getXShortClosureAccess().getGroup(), "rule__XShortClosure__Group__0");
			builder.put(grammarAccess.getXShortClosureAccess().getGroup_0(), "rule__XShortClosure__Group_0__0");
			builder.put(grammarAccess.getXShortClosureAccess().getGroup_0_0(), "rule__XShortClosure__Group_0_0__0");
			builder.put(grammarAccess.getXShortClosureAccess().getGroup_0_0_1(), "rule__XShortClosure__Group_0_0_1__0");
			builder.put(grammarAccess.getXShortClosureAccess().getGroup_0_0_1_1(), "rule__XShortClosure__Group_0_0_1_1__0");
			builder.put(grammarAccess.getXParenthesizedExpressionAccess().getGroup(), "rule__XParenthesizedExpression__Group__0");
			builder.put(grammarAccess.getJvmFormalParameterAccess().getGroup(), "rule__JvmFormalParameter__Group__0");
			builder.put(grammarAccess.getXBooleanLiteralAccess().getGroup(), "rule__XBooleanLiteral__Group__0");
			builder.put(grammarAccess.getXNullLiteralAccess().getGroup(), "rule__XNullLiteral__Group__0");
			builder.put(grammarAccess.getXNumberLiteralAccess().getGroup(), "rule__XNumberLiteral__Group__0");
			builder.put(grammarAccess.getXTypeLiteralAccess().getGroup(), "rule__XTypeLiteral__Group__0");
			builder.put(grammarAccess.getXThrowExpressionAccess().getGroup(), "rule__XThrowExpression__Group__0");
			builder.put(grammarAccess.getXReturnExpressionAccess().getGroup(), "rule__XReturnExpression__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getNumberAccess().getGroup_1(), "rule__Number__Group_1__0");
			builder.put(grammarAccess.getNumberAccess().getGroup_1_1(), "rule__Number__Group_1_1__0");
			builder.put(grammarAccess.getStaticQualifierAccess().getGroup(), "rule__StaticQualifier__Group__0");
			builder.put(grammarAccess.getArrayBracketsAccess().getGroup(), "rule__ArrayBrackets__Group__0");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getGroup(), "rule__XFunctionTypeRef__Group__0");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0(), "rule__XFunctionTypeRef__Group_0__0");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1(), "rule__XFunctionTypeRef__Group_0_1__0");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1(), "rule__XFunctionTypeRef__Group_0_1_1__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup(), "rule__JvmParameterizedTypeReference__Group__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1(), "rule__JvmParameterizedTypeReference__Group_1__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2(), "rule__JvmParameterizedTypeReference__Group_1_2__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4(), "rule__JvmParameterizedTypeReference__Group_1_4__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0(), "rule__JvmParameterizedTypeReference__Group_1_4_0__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0_0(), "rule__JvmParameterizedTypeReference__Group_1_4_0_0__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2(), "rule__JvmParameterizedTypeReference__Group_1_4_2__0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2_2(), "rule__JvmParameterizedTypeReference__Group_1_4_2_2__0");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup(), "rule__JvmWildcardTypeReference__Group__0");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_0(), "rule__JvmWildcardTypeReference__Group_2_0__0");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_1(), "rule__JvmWildcardTypeReference__Group_2_1__0");
			builder.put(grammarAccess.getJvmUpperBoundAccess().getGroup(), "rule__JvmUpperBound__Group__0");
			builder.put(grammarAccess.getJvmUpperBoundAndedAccess().getGroup(), "rule__JvmUpperBoundAnded__Group__0");
			builder.put(grammarAccess.getJvmLowerBoundAccess().getGroup(), "rule__JvmLowerBound__Group__0");
			builder.put(grammarAccess.getJvmLowerBoundAndedAccess().getGroup(), "rule__JvmLowerBoundAnded__Group__0");
			builder.put(grammarAccess.getJvmTypeParameterAccess().getGroup(), "rule__JvmTypeParameter__Group__0");
			builder.put(grammarAccess.getJvmTypeParameterAccess().getGroup_1(), "rule__JvmTypeParameter__Group_1__0");
			builder.put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
			builder.put(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup(), "rule__QualifiedNameInStaticImport__Group__0");
			builder.put(grammarAccess.getCbCProblemAccess().getCbcformulaAssignment_0_0(), "rule__CbCProblem__CbcformulaAssignment_0_0");
			builder.put(grammarAccess.getCbCProblemAccess().getGlobalconditionAssignment_0_1(), "rule__CbCProblem__GlobalconditionAssignment_0_1");
			builder.put(grammarAccess.getCbCProblemAccess().getJavaVariableAssignment_0_2(), "rule__CbCProblem__JavaVariableAssignment_0_2");
			builder.put(grammarAccess.getCbCProblemAccess().getRenamingAssignment_0_3(), "rule__CbCProblem__RenamingAssignment_0_3");
			builder.put(grammarAccess.getCbCFormulaAccess().getNameAssignment_1(), "rule__CbCFormula__NameAssignment_1");
			builder.put(grammarAccess.getCbCFormulaAccess().getPreConditionAssignment_4(), "rule__CbCFormula__PreConditionAssignment_4");
			builder.put(grammarAccess.getCbCFormulaAccess().getStatementAssignment_7(), "rule__CbCFormula__StatementAssignment_7");
			builder.put(grammarAccess.getCbCFormulaAccess().getPostConditionAssignment_11(), "rule__CbCFormula__PostConditionAssignment_11");
			builder.put(grammarAccess.getAbstractStatement_ImplAccess().getNameAssignment_1(), "rule__AbstractStatement_Impl__NameAssignment_1");
			builder.put(grammarAccess.getMethodStatementAccess().getNameAssignment_1(), "rule__MethodStatement__NameAssignment_1");
			builder.put(grammarAccess.getReturnStatementAccess().getNameAssignment_2(), "rule__ReturnStatement__NameAssignment_2");
			builder.put(grammarAccess.getStrengthWeakStatementAccess().getWeakPreConditionAssignment_3(), "rule__StrengthWeakStatement__WeakPreConditionAssignment_3");
			builder.put(grammarAccess.getStrengthWeakStatementAccess().getNameAssignment_6(), "rule__StrengthWeakStatement__NameAssignment_6");
			builder.put(grammarAccess.getStrengthWeakStatementAccess().getStrongPostConditionAssignment_10(), "rule__StrengthWeakStatement__StrongPostConditionAssignment_10");
			builder.put(grammarAccess.getConditionAccess().getConditionAssignment_1(), "rule__Condition__ConditionAssignment_1");
			builder.put(grammarAccess.getSkipStatementAccess().getNameAssignment(), "rule__SkipStatement__NameAssignment");
			builder.put(grammarAccess.getCompositionStatementAccess().getFirstStatementAssignment_2(), "rule__CompositionStatement__FirstStatementAssignment_2");
			builder.put(grammarAccess.getCompositionStatementAccess().getIntermediateConditionAssignment_6(), "rule__CompositionStatement__IntermediateConditionAssignment_6");
			builder.put(grammarAccess.getCompositionStatementAccess().getSecondStatementAssignment_9(), "rule__CompositionStatement__SecondStatementAssignment_9");
			builder.put(grammarAccess.getJavaStatementAccess().getStatementAssignment_1(), "rule__JavaStatement__StatementAssignment_1");
			builder.put(grammarAccess.getJMLAnnotationAccess().getRequiresAssignment_0_2(), "rule__JMLAnnotation__RequiresAssignment_0_2");
			builder.put(grammarAccess.getJMLAnnotationAccess().getEnsuresAssignment_1_2(), "rule__JMLAnnotation__EnsuresAssignment_1_2");
			builder.put(grammarAccess.getInlineBlockStatementAccess().getBlockAssignment_0_1(), "rule__InlineBlockStatement__BlockAssignment_0_1");
			builder.put(grammarAccess.getInlineBlockStatementAccess().getReferencesAssignment_1_2(), "rule__InlineBlockStatement__ReferencesAssignment_1_2");
			builder.put(grammarAccess.getBlockStatementAccess().getNameAssignment_2(), "rule__BlockStatement__NameAssignment_2");
			builder.put(grammarAccess.getBlockStatementAccess().getJmlAnnotationAssignment_4(), "rule__BlockStatement__JmlAnnotationAssignment_4");
			builder.put(grammarAccess.getBlockStatementAccess().getJavaStatementAssignment_6(), "rule__BlockStatement__JavaStatementAssignment_6");
			builder.put(grammarAccess.getSelectionStatementAccess().getGuardsAssignment_3(), "rule__SelectionStatement__GuardsAssignment_3");
			builder.put(grammarAccess.getSelectionStatementAccess().getCommandsAssignment_7(), "rule__SelectionStatement__CommandsAssignment_7");
			builder.put(grammarAccess.getSelectionStatementAccess().getGuardsAssignment_9_2(), "rule__SelectionStatement__GuardsAssignment_9_2");
			builder.put(grammarAccess.getSelectionStatementAccess().getCommandsAssignment_9_6(), "rule__SelectionStatement__CommandsAssignment_9_6");
			builder.put(grammarAccess.getSmallRepetitionStatementAccess().getGuardAssignment_3(), "rule__SmallRepetitionStatement__GuardAssignment_3");
			builder.put(grammarAccess.getSmallRepetitionStatementAccess().getInvariantAssignment_8(), "rule__SmallRepetitionStatement__InvariantAssignment_8");
			builder.put(grammarAccess.getSmallRepetitionStatementAccess().getVariantAssignment_12(), "rule__SmallRepetitionStatement__VariantAssignment_12");
			builder.put(grammarAccess.getSmallRepetitionStatementAccess().getLoopStatementAssignment_15(), "rule__SmallRepetitionStatement__LoopStatementAssignment_15");
			builder.put(grammarAccess.getVariantAccess().getNameAssignment_1(), "rule__Variant__NameAssignment_1");
			builder.put(grammarAccess.getJavaVariablesAccess().getVariablesAssignment_2_2(), "rule__JavaVariables__VariablesAssignment_2_2");
			builder.put(grammarAccess.getJavaVariablesAccess().getVariablesAssignment_2_3_1(), "rule__JavaVariables__VariablesAssignment_2_3_1");
			builder.put(grammarAccess.getJavaVariableAccess().getTypeAssignment_1(), "rule__JavaVariable__TypeAssignment_1");
			builder.put(grammarAccess.getJavaVariableAccess().getVarAssignment_2(), "rule__JavaVariable__VarAssignment_2");
			builder.put(grammarAccess.getGlobalConditionsAccess().getConditionsAssignment_2_2(), "rule__GlobalConditions__ConditionsAssignment_2_2");
			builder.put(grammarAccess.getGlobalConditionsAccess().getConditionsAssignment_2_3_1(), "rule__GlobalConditions__ConditionsAssignment_2_3_1");
			builder.put(grammarAccess.getRenamingAccess().getRenameAssignment_2_2(), "rule__Renaming__RenameAssignment_2_2");
			builder.put(grammarAccess.getRenamingAccess().getRenameAssignment_2_3(), "rule__Renaming__RenameAssignment_2_3");
			builder.put(grammarAccess.getRenameAccess().getTypeAssignment_3(), "rule__Rename__TypeAssignment_3");
			builder.put(grammarAccess.getRenameAccess().getFunctionAssignment_5(), "rule__Rename__FunctionAssignment_5");
			builder.put(grammarAccess.getRenameAccess().getNewNameAssignment_7(), "rule__Rename__NewNameAssignment_7");
			builder.put(grammarAccess.getVariableOrMethodNameAccess().getNameAssignment(), "rule__VariableOrMethodName__NameAssignment");
			builder.put(grammarAccess.getForeachAccess().getForeachAssignment_1_0(), "rule__Foreach__ForeachAssignment_1_0");
			builder.put(grammarAccess.getForeachAccess().getTypeAssignment_1_1(), "rule__Foreach__TypeAssignment_1_1");
			builder.put(grammarAccess.getForeachAccess().getVarAssignment_1_2(), "rule__Foreach__VarAssignment_1_2");
			builder.put(grammarAccess.getForeachAccess().getRightAssignment_1_4(), "rule__Foreach__RightAssignment_1_4");
			builder.put(grammarAccess.getExistsAccess().getExistsAssignment_1_0(), "rule__Exists__ExistsAssignment_1_0");
			builder.put(grammarAccess.getExistsAccess().getTypeAssignment_1_1(), "rule__Exists__TypeAssignment_1_1");
			builder.put(grammarAccess.getExistsAccess().getVarAssignment_1_2(), "rule__Exists__VarAssignment_1_2");
			builder.put(grammarAccess.getExistsAccess().getRightAssignment_1_4(), "rule__Exists__RightAssignment_1_4");
			builder.put(grammarAccess.getRelationAccess().getRightAssignment_1_1(), "rule__Relation__RightAssignment_1_1");
			builder.put(grammarAccess.getImplicationAccess().getRightAssignment_1_1(), "rule__Implication__RightAssignment_1_1");
			builder.put(grammarAccess.getConcatAccess().getRightAssignment_1_1(), "rule__Concat__RightAssignment_1_1");
			builder.put(grammarAccess.getMultiMathOperationAccess().getRightAssignment_1_1(), "rule__MultiMathOperation__RightAssignment_1_1");
			builder.put(grammarAccess.getAddMathOperationAccess().getRightAssignment_1_1(), "rule__AddMathOperation__RightAssignment_1_1");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getIsTrueAssignment_0_1_0_1(), "rule__PrimaryExpression__IsTrueAssignment_0_1_0_1");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getFuncAssignment_2_1(), "rule__PrimaryExpression__FuncAssignment_2_1");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getArgsAssignment_2_2_1_0(), "rule__PrimaryExpression__ArgsAssignment_2_2_1_0");
			builder.put(grammarAccess.getPrimaryExpressionAccess().getArgsAssignment_2_2_1_1_1(), "rule__PrimaryExpression__ArgsAssignment_2_2_1_1_1");
			builder.put(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0(), "rule__XImportDeclaration__StaticAssignment_1_0_0");
			builder.put(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_1(), "rule__XImportDeclaration__ImportedTypeAssignment_1_0_1");
			builder.put(grammarAccess.getXImportDeclarationAccess().getWildcardAssignment_1_0_2_0(), "rule__XImportDeclaration__WildcardAssignment_1_0_2_0");
			builder.put(grammarAccess.getXImportDeclarationAccess().getMemberNameAssignment_1_0_2_1(), "rule__XImportDeclaration__MemberNameAssignment_1_0_2_1");
			builder.put(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1(), "rule__XImportDeclaration__ImportedTypeAssignment_1_1");
			builder.put(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2(), "rule__XImportDeclaration__ImportedNamespaceAssignment_1_2");
			builder.put(grammarAccess.getFullJvmFormalParameterAccess().getFinalAssignment_1(), "rule__FullJvmFormalParameter__FinalAssignment_1");
			builder.put(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeAssignment_2(), "rule__FullJvmFormalParameter__ParameterTypeAssignment_2");
			builder.put(grammarAccess.getFullJvmFormalParameterAccess().getVarArgsAssignment_3(), "rule__FullJvmFormalParameter__VarArgsAssignment_3");
			builder.put(grammarAccess.getFullJvmFormalParameterAccess().getNameAssignment_4(), "rule__FullJvmFormalParameter__NameAssignment_4");
			builder.put(grammarAccess.getXJSemicolonStatementAccess().getExpressionAssignment_1(), "rule__XJSemicolonStatement__ExpressionAssignment_1");
			builder.put(grammarAccess.getXJSemicolonStatementAccess().getSemicolonAssignment_2(), "rule__XJSemicolonStatement__SemicolonAssignment_2");
			builder.put(grammarAccess.getXJEmptyStatementAccess().getSemicolonAssignment_1(), "rule__XJEmptyStatement__SemicolonAssignment_1");
			builder.put(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_2(), "rule__XBlockExpression__ExpressionsAssignment_2");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getFinalAssignment_0_0_1(), "rule__XVariableDeclaration__FinalAssignment_0_0_1");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_0_0_2(), "rule__XVariableDeclaration__TypeAssignment_0_0_2");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_0_0_3(), "rule__XVariableDeclaration__NameAssignment_0_0_3");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_1_1(), "rule__XVariableDeclaration__RightAssignment_1_1");
			builder.put(grammarAccess.getXVariableDeclarationAccess().getAdditionalVariablesAssignment_2_1(), "rule__XVariableDeclaration__AdditionalVariablesAssignment_2_1");
			builder.put(grammarAccess.getXJAdditionalXVariableDeclarationAccess().getNameAssignment_1(), "rule__XJAdditionalXVariableDeclaration__NameAssignment_1");
			builder.put(grammarAccess.getXJAdditionalXVariableDeclarationAccess().getRightAssignment_2_1(), "rule__XJAdditionalXVariableDeclaration__RightAssignment_2_1");
			builder.put(grammarAccess.getXAssignmentAccess().getFeatureAssignment_0_0_0_1(), "rule__XAssignment__FeatureAssignment_0_0_0_1");
			builder.put(grammarAccess.getXAssignmentAccess().getIndexesAssignment_0_0_0_3(), "rule__XAssignment__IndexesAssignment_0_0_0_3");
			builder.put(grammarAccess.getXAssignmentAccess().getIndexesAssignment_0_0_0_5_1(), "rule__XAssignment__IndexesAssignment_0_0_0_5_1");
			builder.put(grammarAccess.getXAssignmentAccess().getValueAssignment_0_1(), "rule__XAssignment__ValueAssignment_0_1");
			builder.put(grammarAccess.getXAssignmentAccess().getFeatureAssignment_1_0_0_1(), "rule__XAssignment__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXAssignmentAccess().getValueAssignment_1_1(), "rule__XAssignment__ValueAssignment_1_1");
			builder.put(grammarAccess.getXAssignmentAccess().getThenAssignment_2_1_0_1(), "rule__XAssignment__ThenAssignment_2_1_0_1");
			builder.put(grammarAccess.getXAssignmentAccess().getElseAssignment_2_1_0_3(), "rule__XAssignment__ElseAssignment_2_1_0_3");
			builder.put(grammarAccess.getXAssignmentAccess().getFeatureAssignment_2_1_1_0_0_1(), "rule__XAssignment__FeatureAssignment_2_1_1_0_0_1");
			builder.put(grammarAccess.getXAssignmentAccess().getRightOperandAssignment_2_1_1_1(), "rule__XAssignment__RightOperandAssignment_2_1_1_1");
			builder.put(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getIndexesAssignment_1_0_2(), "rule__XJFeatureCallWithArrayAccess__IndexesAssignment_1_0_2");
			builder.put(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getIndexesAssignment_1_0_4_1(), "rule__XJFeatureCallWithArrayAccess__IndexesAssignment_1_0_4_1");
			builder.put(grammarAccess.getXFeatureCallAccess().getFeatureAssignment_1(), "rule__XFeatureCall__FeatureAssignment_1");
			builder.put(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallAssignment_2_0(), "rule__XFeatureCall__ExplicitOperationCallAssignment_2_0");
			builder.put(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_2_1_0(), "rule__XFeatureCall__FeatureCallArgumentsAssignment_2_1_0");
			builder.put(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_2_1_1_1(), "rule__XFeatureCall__FeatureCallArgumentsAssignment_2_1_1_1");
			builder.put(grammarAccess.getXConstructorCallAccess().getConstructorAssignment_2(), "rule__XConstructorCall__ConstructorAssignment_2");
			builder.put(grammarAccess.getXConstructorCallAccess().getExplicitTypeArgumentsAssignment_3_0(), "rule__XConstructorCall__ExplicitTypeArgumentsAssignment_3_0");
			builder.put(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_1_0(), "rule__XConstructorCall__TypeArgumentsAssignment_3_1_0");
			builder.put(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_1_1_1(), "rule__XConstructorCall__TypeArgumentsAssignment_3_1_1_1");
			builder.put(grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallAssignment_4_0(), "rule__XConstructorCall__ExplicitConstructorCallAssignment_4_0");
			builder.put(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_0(), "rule__XConstructorCall__ArgumentsAssignment_4_1_0");
			builder.put(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_1(), "rule__XConstructorCall__ArgumentsAssignment_4_1_1_1");
			builder.put(grammarAccess.getXJArrayConstructorCallAccess().getTypeAssignment_0_0_2(), "rule__XJArrayConstructorCall__TypeAssignment_0_0_2");
			builder.put(grammarAccess.getXJArrayConstructorCallAccess().getDimensionsAssignment_0_0_3(), "rule__XJArrayConstructorCall__DimensionsAssignment_0_0_3");
			builder.put(grammarAccess.getXJArrayConstructorCallAccess().getIndexesAssignment_1(), "rule__XJArrayConstructorCall__IndexesAssignment_1");
			builder.put(grammarAccess.getXJArrayConstructorCallAccess().getDimensionsAssignment_3_0(), "rule__XJArrayConstructorCall__DimensionsAssignment_3_0");
			builder.put(grammarAccess.getXJArrayConstructorCallAccess().getIndexesAssignment_3_1(), "rule__XJArrayConstructorCall__IndexesAssignment_3_1");
			builder.put(grammarAccess.getXJArrayConstructorCallAccess().getArrayLiteralAssignment_4(), "rule__XJArrayConstructorCall__ArrayLiteralAssignment_4");
			builder.put(grammarAccess.getXCastedExpressionAccess().getTypeAssignment_0_0_2(), "rule__XCastedExpression__TypeAssignment_0_0_2");
			builder.put(grammarAccess.getXCastedExpressionAccess().getTargetAssignment_0_0_4(), "rule__XCastedExpression__TargetAssignment_0_0_4");
			builder.put(grammarAccess.getXPostfixOperationAccess().getFeatureAssignment_0_0_0_1(), "rule__XPostfixOperation__FeatureAssignment_0_0_0_1");
			builder.put(grammarAccess.getXPostfixOperationAccess().getOperandAssignment_0_1(), "rule__XPostfixOperation__OperandAssignment_0_1");
			builder.put(grammarAccess.getXPostfixOperationAccess().getFeatureAssignment_1_1_0_0_1(), "rule__XPostfixOperation__FeatureAssignment_1_1_0_0_1");
			builder.put(grammarAccess.getXPostfixOperationAccess().getIndexesAssignment_1_1_1_0_2(), "rule__XPostfixOperation__IndexesAssignment_1_1_1_0_2");
			builder.put(grammarAccess.getXPostfixOperationAccess().getIndexesAssignment_1_1_1_0_4_1(), "rule__XPostfixOperation__IndexesAssignment_1_1_1_0_4_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getArrayDimensionsAssignment_1_0_0_1(), "rule__XMemberFeatureCall__ArrayDimensionsAssignment_1_0_0_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_1_0_0_2(), "rule__XMemberFeatureCall__FeatureAssignment_1_1_0_0_2");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getValueAssignment_1_1_1(), "rule__XMemberFeatureCall__ValueAssignment_1_1_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_2_1(), "rule__XMemberFeatureCall__FeatureAssignment_1_2_1");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_2_2_0(), "rule__XMemberFeatureCall__ExplicitOperationCallAssignment_1_2_2_0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_2_2_1_0(), "rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_2_2_1_0");
			builder.put(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_2_2_1_1_1(), "rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_2_2_1_1_1");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamAssignment_0_0_3(), "rule__XForLoopExpression__DeclaredParamAssignment_0_0_3");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getForExpressionAssignment_1(), "rule__XForLoopExpression__ForExpressionAssignment_1");
			builder.put(grammarAccess.getXForLoopExpressionAccess().getEachExpressionAssignment_3(), "rule__XForLoopExpression__EachExpressionAssignment_3");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_0(), "rule__XBasicForLoopExpression__InitExpressionsAssignment_3_0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_1_1(), "rule__XBasicForLoopExpression__InitExpressionsAssignment_3_1_1");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionAssignment_5(), "rule__XBasicForLoopExpression__ExpressionAssignment_5");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_0(), "rule__XBasicForLoopExpression__UpdateExpressionsAssignment_7_0");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_1_1(), "rule__XBasicForLoopExpression__UpdateExpressionsAssignment_7_1_1");
			builder.put(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionAssignment_9(), "rule__XBasicForLoopExpression__EachExpressionAssignment_9");
			builder.put(grammarAccess.getXIfExpressionAccess().getIfAssignment_3(), "rule__XIfExpression__IfAssignment_3");
			builder.put(grammarAccess.getXIfExpressionAccess().getThenAssignment_5(), "rule__XIfExpression__ThenAssignment_5");
			builder.put(grammarAccess.getXIfExpressionAccess().getElseAssignment_6_1(), "rule__XIfExpression__ElseAssignment_6_1");
			builder.put(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_3(), "rule__XWhileExpression__PredicateAssignment_3");
			builder.put(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_5(), "rule__XWhileExpression__BodyAssignment_5");
			builder.put(grammarAccess.getXDoWhileExpressionAccess().getBodyAssignment_2(), "rule__XDoWhileExpression__BodyAssignment_2");
			builder.put(grammarAccess.getXDoWhileExpressionAccess().getPredicateAssignment_5(), "rule__XDoWhileExpression__PredicateAssignment_5");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_3(), "rule__XSwitchExpression__SwitchAssignment_3");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_6(), "rule__XSwitchExpression__CasesAssignment_6");
			builder.put(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_7_2(), "rule__XSwitchExpression__DefaultAssignment_7_2");
			builder.put(grammarAccess.getXCasePartAccess().getCaseAssignment_2(), "rule__XCasePart__CaseAssignment_2");
			builder.put(grammarAccess.getXCasePartAccess().getThenAssignment_4(), "rule__XCasePart__ThenAssignment_4");
			builder.put(grammarAccess.getXJSwitchStatementsAccess().getExpressionsAssignment_1(), "rule__XJSwitchStatements__ExpressionsAssignment_1");
			builder.put(grammarAccess.getXJTryWithResourcesStatementAccess().getOpenParenthesisAssignment_0_0_2(), "rule__XJTryWithResourcesStatement__OpenParenthesisAssignment_0_0_2");
			builder.put(grammarAccess.getXJTryWithResourcesStatementAccess().getResourcesAssignment_1(), "rule__XJTryWithResourcesStatement__ResourcesAssignment_1");
			builder.put(grammarAccess.getXJTryWithResourcesStatementAccess().getExpressionAssignment_3(), "rule__XJTryWithResourcesStatement__ExpressionAssignment_3");
			builder.put(grammarAccess.getXJTryWithResourcesStatementAccess().getCatchClausesAssignment_4(), "rule__XJTryWithResourcesStatement__CatchClausesAssignment_4");
			builder.put(grammarAccess.getXJTryWithResourcesStatementAccess().getFinallyExpressionAssignment_5_1(), "rule__XJTryWithResourcesStatement__FinallyExpressionAssignment_5_1");
			builder.put(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getFinalAssignment_1(), "rule__XJTryWithResourcesVariableDeclaration__FinalAssignment_1");
			builder.put(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getTypeAssignment_2(), "rule__XJTryWithResourcesVariableDeclaration__TypeAssignment_2");
			builder.put(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getNameAssignment_3(), "rule__XJTryWithResourcesVariableDeclaration__NameAssignment_3");
			builder.put(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getRightAssignment_5(), "rule__XJTryWithResourcesVariableDeclaration__RightAssignment_5");
			builder.put(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getSemicolonAssignment_6(), "rule__XJTryWithResourcesVariableDeclaration__SemicolonAssignment_6");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionAssignment_2(), "rule__XTryCatchFinallyExpression__ExpressionAssignment_2");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0(), "rule__XTryCatchFinallyExpression__CatchClausesAssignment_3_0_0");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_0_1_1(), "rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_0_1_1");
			builder.put(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_1_1(), "rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_1_1");
			builder.put(grammarAccess.getXCatchClauseAccess().getDeclaredParamAssignment_3(), "rule__XCatchClause__DeclaredParamAssignment_3");
			builder.put(grammarAccess.getXCatchClauseAccess().getExpressionAssignment_5(), "rule__XCatchClause__ExpressionAssignment_5");
			builder.put(grammarAccess.getXSynchronizedExpressionAccess().getParamAssignment_1(), "rule__XSynchronizedExpression__ParamAssignment_1");
			builder.put(grammarAccess.getXSynchronizedExpressionAccess().getExpressionAssignment_3(), "rule__XSynchronizedExpression__ExpressionAssignment_3");
			builder.put(grammarAccess.getXJArrayLiteralAccess().getElementsAssignment_2_0(), "rule__XJArrayLiteral__ElementsAssignment_2_0");
			builder.put(grammarAccess.getXJArrayLiteralAccess().getElementsAssignment_2_1_1(), "rule__XJArrayLiteral__ElementsAssignment_2_1_1");
			builder.put(grammarAccess.getXCharLiteralAccess().getValueAssignment_1(), "rule__XCharLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getXStringLiteralAccess().getValueAssignment_1(), "rule__XStringLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getXAndExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XAndExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXAndExpressionAccess().getRightOperandAssignment_1_1(), "rule__XAndExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XBitwiseInclusiveOrExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getRightOperandAssignment_1_1(), "rule__XBitwiseInclusiveOrExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XBitwiseExclusiveOrExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getRightOperandAssignment_1_1(), "rule__XBitwiseExclusiveOrExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXBitwiseAndExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XBitwiseAndExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXBitwiseAndExpressionAccess().getRightOperandAssignment_1_1(), "rule__XBitwiseAndExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsAssignment_0_1_0(), "rule__XAnnotationElementValueOrCommaList__ElementsAssignment_0_1_0");
			builder.put(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsAssignment_0_1_1_1(), "rule__XAnnotationElementValueOrCommaList__ElementsAssignment_0_1_1_1");
			builder.put(grammarAccess.getXAnnotationElementValueAccess().getElementsAssignment_0_1_0(), "rule__XAnnotationElementValue__ElementsAssignment_0_1_0");
			builder.put(grammarAccess.getXAnnotationElementValueAccess().getElementsAssignment_0_1_1_1(), "rule__XAnnotationElementValue__ElementsAssignment_0_1_1_1");
			builder.put(grammarAccess.getXAnnotationAccess().getAnnotationTypeAssignment_2(), "rule__XAnnotation__AnnotationTypeAssignment_2");
			builder.put(grammarAccess.getXAnnotationAccess().getElementValuePairsAssignment_3_1_0_0(), "rule__XAnnotation__ElementValuePairsAssignment_3_1_0_0");
			builder.put(grammarAccess.getXAnnotationAccess().getElementValuePairsAssignment_3_1_0_1_1(), "rule__XAnnotation__ElementValuePairsAssignment_3_1_0_1_1");
			builder.put(grammarAccess.getXAnnotationAccess().getValueAssignment_3_1_1(), "rule__XAnnotation__ValueAssignment_3_1_1");
			builder.put(grammarAccess.getXAnnotationElementValuePairAccess().getElementAssignment_0_0_0(), "rule__XAnnotationElementValuePair__ElementAssignment_0_0_0");
			builder.put(grammarAccess.getXAnnotationElementValuePairAccess().getValueAssignment_1(), "rule__XAnnotationElementValuePair__ValueAssignment_1");
			builder.put(grammarAccess.getXOrExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XOrExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXOrExpressionAccess().getRightOperandAssignment_1_1(), "rule__XOrExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XEqualityExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXEqualityExpressionAccess().getRightOperandAssignment_1_1(), "rule__XEqualityExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_1(), "rule__XRelationalExpression__TypeAssignment_1_0_1");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getFeatureAssignment_1_1_0_0_1(), "rule__XRelationalExpression__FeatureAssignment_1_1_0_0_1");
			builder.put(grammarAccess.getXRelationalExpressionAccess().getRightOperandAssignment_1_1_1(), "rule__XRelationalExpression__RightOperandAssignment_1_1_1");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XOtherOperatorExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandAssignment_1_1(), "rule__XOtherOperatorExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XAdditiveExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXAdditiveExpressionAccess().getRightOperandAssignment_1_1(), "rule__XAdditiveExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__XMultiplicativeExpression__FeatureAssignment_1_0_0_1");
			builder.put(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandAssignment_1_1(), "rule__XMultiplicativeExpression__RightOperandAssignment_1_1");
			builder.put(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1(), "rule__XUnaryOperation__FeatureAssignment_0_1");
			builder.put(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2(), "rule__XUnaryOperation__OperandAssignment_0_2");
			builder.put(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_0(), "rule__XSetLiteral__ElementsAssignment_3_0");
			builder.put(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_1_1(), "rule__XSetLiteral__ElementsAssignment_3_1_1");
			builder.put(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_0(), "rule__XListLiteral__ElementsAssignment_3_0");
			builder.put(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_1_1(), "rule__XListLiteral__ElementsAssignment_3_1_1");
			builder.put(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0(), "rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_0");
			builder.put(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1(), "rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_1_1");
			builder.put(grammarAccess.getXClosureAccess().getExplicitSyntaxAssignment_1_0_1(), "rule__XClosure__ExplicitSyntaxAssignment_1_0_1");
			builder.put(grammarAccess.getXClosureAccess().getExpressionAssignment_2(), "rule__XClosure__ExpressionAssignment_2");
			builder.put(grammarAccess.getXExpressionInClosureAccess().getExpressionsAssignment_1_0(), "rule__XExpressionInClosure__ExpressionsAssignment_1_0");
			builder.put(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_0(), "rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_0");
			builder.put(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_1_1(), "rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_1_1");
			builder.put(grammarAccess.getXShortClosureAccess().getExplicitSyntaxAssignment_0_0_2(), "rule__XShortClosure__ExplicitSyntaxAssignment_0_0_2");
			builder.put(grammarAccess.getXShortClosureAccess().getExpressionAssignment_1(), "rule__XShortClosure__ExpressionAssignment_1");
			builder.put(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0(), "rule__JvmFormalParameter__ParameterTypeAssignment_0");
			builder.put(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1(), "rule__JvmFormalParameter__NameAssignment_1");
			builder.put(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1_1(), "rule__XBooleanLiteral__IsTrueAssignment_1_1");
			builder.put(grammarAccess.getXNumberLiteralAccess().getValueAssignment_1(), "rule__XNumberLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_3(), "rule__XTypeLiteral__TypeAssignment_3");
			builder.put(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsAssignment_4(), "rule__XTypeLiteral__ArrayDimensionsAssignment_4");
			builder.put(grammarAccess.getXThrowExpressionAccess().getExpressionAssignment_2(), "rule__XThrowExpression__ExpressionAssignment_2");
			builder.put(grammarAccess.getXReturnExpressionAccess().getExpressionAssignment_2(), "rule__XReturnExpression__ExpressionAssignment_2");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0(), "rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1(), "rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1");
			builder.put(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2(), "rule__XFunctionTypeRef__ReturnTypeAssignment_2");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0(), "rule__JvmParameterizedTypeReference__TypeAssignment_0");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_1_4_1(), "rule__JvmParameterizedTypeReference__TypeAssignment_1_4_1");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_1");
			builder.put(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_2_1(), "rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_2_1");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_0(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_0");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_1(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_1");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_0(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_0");
			builder.put(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_1(), "rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_1");
			builder.put(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1(), "rule__JvmUpperBound__TypeReferenceAssignment_1");
			builder.put(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1(), "rule__JvmUpperBoundAnded__TypeReferenceAssignment_1");
			builder.put(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1(), "rule__JvmLowerBound__TypeReferenceAssignment_1");
			builder.put(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceAssignment_1(), "rule__JvmLowerBoundAnded__TypeReferenceAssignment_1");
			builder.put(grammarAccess.getJvmTypeParameterAccess().getNameAssignment_0(), "rule__JvmTypeParameter__NameAssignment_0");
			builder.put(grammarAccess.getJvmTypeParameterAccess().getConstraintsAssignment_1_0(), "rule__JvmTypeParameter__ConstraintsAssignment_1_0");
			builder.put(grammarAccess.getJvmTypeParameterAccess().getConstraintsAssignment_1_1(), "rule__JvmTypeParameter__ConstraintsAssignment_1_1");
			builder.put(grammarAccess.getXImportSectionAccess().getImportDeclarationsAssignment(), "rule__XImportSection__ImportDeclarationsAssignment");
			builder.put(grammarAccess.getCbCProblemAccess().getUnorderedGroup_0(), "rule__CbCProblem__UnorderedGroup_0");
			builder.put(grammarAccess.getJMLAnnotationAccess().getUnorderedGroup(), "rule__JMLAnnotation__UnorderedGroup");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private DslGrammarAccess grammarAccess;

	@Override
	protected InternalDslParser createParser() {
		InternalDslParser result = new InternalDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
