package de.tu_bs.cs.isf.cbc.tool.helper;

import de.tu_bs.cs.isf.cbc.cbcmodel.AbstractStatement;
import de.tu_bs.cs.isf.cbc.cbcmodel.Composition3Statement;
import de.tu_bs.cs.isf.cbc.cbcmodel.CompositionStatement;
import de.tu_bs.cs.isf.cbc.cbcmodel.Condition;
import de.tu_bs.cs.isf.cbc.cbcmodel.RepetitionStatement;
import de.tu_bs.cs.isf.cbc.cbcmodel.SelectionStatement;
import de.tu_bs.cs.isf.cbc.cbcmodel.SkipStatement;
import de.tu_bs.cs.isf.cbc.cbcmodel.SmallRepetitionStatement;

public class UpdateConditionsOfChildren {

	public static void updateConditionsofChildren(Condition condition) {
		AbstractStatement statement = (AbstractStatement) condition.eContainer();
		if (statement instanceof CompositionStatement
				|| statement instanceof Composition3Statement
				|| statement instanceof RepetitionStatement
				|| statement instanceof SelectionStatement) {
			if (statement.getParent() != null) {
				updateRefinedStatement(statement.getParent(), statement);
			}
		} else if (statement.getRefinement() != null) {
			AbstractStatement refinedStatement = statement.getRefinement();
			updateRefinedStatement(statement, refinedStatement);
		}
	}
	
	public static void updateRefinedStatement(AbstractStatement parentStatement, AbstractStatement refinedStatement) {
		Condition preParent = parentStatement.getPreCondition();
		Condition postParent = parentStatement.getPostCondition();
		refinedStatement.setProven(false);
		if (refinedStatement instanceof SkipStatement) {
			
			SkipStatement childSkip = (SkipStatement) refinedStatement;
			childSkip.getPreCondition().setName(preParent.getName());
			childSkip.getPostCondition().setName(postParent.getName());
			
		} else if (refinedStatement instanceof CompositionStatement) {
			CompositionStatement childCompo = (CompositionStatement) refinedStatement;
			AbstractStatement firstStatement = childCompo.getFirstStatement();
			AbstractStatement secondStatement = childCompo.getSecondStatement();
			firstStatement.getPreCondition().setName(preParent.getName());
			firstStatement.getPostCondition().setName(childCompo.getIntermediateCondition().getName());
			secondStatement.getPreCondition().setName(childCompo.getIntermediateCondition().getName());
			secondStatement.getPostCondition().setName(postParent.getName());
			
			if (firstStatement.getRefinement() != null) {
				updateRefinedStatement(firstStatement, firstStatement.getRefinement());
			}
			if (secondStatement.getRefinement() != null) {
				updateRefinedStatement(secondStatement, secondStatement.getRefinement());
			}
			
		} else if (refinedStatement instanceof Composition3Statement) {
			Composition3Statement childCompo = (Composition3Statement) refinedStatement;
			AbstractStatement firstStatement = childCompo.getFirstStatement();
			AbstractStatement secondStatement = childCompo.getSecondStatement();
			AbstractStatement thirdStatement = childCompo.getThirdStatement();
			firstStatement.getPreCondition().setName(preParent.getName());
			firstStatement.getPostCondition().setName(childCompo.getFirstIntermediateCondition().getName());
			secondStatement.getPreCondition().setName(childCompo.getFirstIntermediateCondition().getName());
			secondStatement.getPostCondition().setName(childCompo.getSecondIntermediateCondition().getName());
			thirdStatement.getPreCondition().setName(childCompo.getSecondIntermediateCondition().getName());
			thirdStatement.getPostCondition().setName(postParent.getName());
			
			if (firstStatement.getRefinement() != null) {
				updateRefinedStatement(firstStatement, firstStatement.getRefinement());
			}
			if (secondStatement.getRefinement() != null) {
				updateRefinedStatement(secondStatement, secondStatement.getRefinement());
			}
			if (thirdStatement.getRefinement() != null) {
				updateRefinedStatement(thirdStatement, thirdStatement.getRefinement());
			}
			
		} else if (refinedStatement instanceof RepetitionStatement) {
			RepetitionStatement childRep = (RepetitionStatement) refinedStatement;
			AbstractStatement startStatement = childRep.getStartStatement();
			AbstractStatement loopStatement = childRep.getLoopStatement();
			AbstractStatement endStatement = childRep.getEndStatement();
			startStatement.getPreCondition().setName(preParent.getName());
			startStatement.getPostCondition().setName(childRep.getInvariant().getName());
			loopStatement.getPreCondition().setName("(" + childRep.getInvariant().getName() + ") & (" + childRep.getGuard().getName() + ")");
			loopStatement.getPostCondition().setName(childRep.getInvariant().getName());
			endStatement.getPreCondition().setName("(" + childRep.getInvariant().getName() + ") & !(" + childRep.getGuard().getName() + ")");
			endStatement.getPostCondition().setName(postParent.getName());
			
			if (startStatement.getRefinement() != null) {
				updateRefinedStatement(startStatement, startStatement.getRefinement());
			}
			if (loopStatement.getRefinement() != null) {
				updateRefinedStatement(loopStatement, loopStatement.getRefinement());
			}
			if (endStatement.getRefinement() != null) {
				updateRefinedStatement(endStatement, endStatement.getRefinement());
			}
			
		} else if (refinedStatement instanceof SmallRepetitionStatement) {
			SmallRepetitionStatement childRep = (SmallRepetitionStatement) refinedStatement;
			AbstractStatement loopStatement = childRep.getLoopStatement();
			loopStatement.getPreCondition().setName("(" + childRep.getInvariant().getName() + ") & (" + childRep.getGuard().getName() + ")");
			loopStatement.getPostCondition().setName(childRep.getInvariant().getName());
			
			if (loopStatement.getRefinement() != null) {
				updateRefinedStatement(loopStatement, loopStatement.getRefinement());
			}
			
		} else if (refinedStatement instanceof SelectionStatement) {
			SelectionStatement childSel = (SelectionStatement) refinedStatement;
			for (int i = 0; i < childSel.getCommands().size(); i++) {
				AbstractStatement childStatement = childSel.getCommands().get(i);
				Condition childGuard = childSel.getGuards().get(i);
				childStatement.getPreCondition().setName("(" + preParent.getName() + ") & (" + childGuard.getName() + ")");
				childStatement.getPostCondition().setName(postParent.getName());
				
				if (childStatement.getRefinement() != null) {
					updateRefinedStatement(childStatement, childStatement.getRefinement());
				}
			}
			
		} else if (refinedStatement instanceof AbstractStatement) {
			AbstractStatement childAbstract = (AbstractStatement) refinedStatement;
			childAbstract.getPreCondition().setName(preParent.getName());
			childAbstract.getPostCondition().setName(postParent.getName());
		}
	}
}