/**
 */
package de.tu_bs.cs.isf.cbc.cbcmodel.provider;

import de.tu_bs.cs.isf.cbc.cbcmodel.util.CbcmodelAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class CbcmodelItemProviderAdapterFactory extends CbcmodelAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CbcmodelItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.CbCFormula} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CbCFormulaItemProvider cbCFormulaItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.CbCFormula}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCbCFormulaAdapter() {
		if (cbCFormulaItemProvider == null) {
			cbCFormulaItemProvider = new CbCFormulaItemProvider(this);
		}

		return cbCFormulaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.Condition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionItemProvider conditionItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.Condition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionAdapter() {
		if (conditionItemProvider == null) {
			conditionItemProvider = new ConditionItemProvider(this);
		}

		return conditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.AbstractStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractStatementItemProvider abstractStatementItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.AbstractStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractStatementAdapter() {
		if (abstractStatementItemProvider == null) {
			abstractStatementItemProvider = new AbstractStatementItemProvider(this);
		}

		return abstractStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.SkipStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SkipStatementItemProvider skipStatementItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.SkipStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSkipStatementAdapter() {
		if (skipStatementItemProvider == null) {
			skipStatementItemProvider = new SkipStatementItemProvider(this);
		}

		return skipStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.CompositionStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositionStatementItemProvider compositionStatementItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.CompositionStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositionStatementAdapter() {
		if (compositionStatementItemProvider == null) {
			compositionStatementItemProvider = new CompositionStatementItemProvider(this);
		}

		return compositionStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.SelectionStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectionStatementItemProvider selectionStatementItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.SelectionStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectionStatementAdapter() {
		if (selectionStatementItemProvider == null) {
			selectionStatementItemProvider = new SelectionStatementItemProvider(this);
		}

		return selectionStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.RepetitionStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepetitionStatementItemProvider repetitionStatementItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.RepetitionStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepetitionStatementAdapter() {
		if (repetitionStatementItemProvider == null) {
			repetitionStatementItemProvider = new RepetitionStatementItemProvider(this);
		}

		return repetitionStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.MethodStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MethodStatementItemProvider methodStatementItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.MethodStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMethodStatementAdapter() {
		if (methodStatementItemProvider == null) {
			methodStatementItemProvider = new MethodStatementItemProvider(this);
		}

		return methodStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.Variant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariantItemProvider variantItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.Variant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariantAdapter() {
		if (variantItemProvider == null) {
			variantItemProvider = new VariantItemProvider(this);
		}

		return variantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.ReturnStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReturnStatementItemProvider returnStatementItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.ReturnStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReturnStatementAdapter() {
		if (returnStatementItemProvider == null) {
			returnStatementItemProvider = new ReturnStatementItemProvider(this);
		}

		return returnStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.Method} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MethodItemProvider methodItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.Method}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMethodAdapter() {
		if (methodItemProvider == null) {
			methodItemProvider = new MethodItemProvider(this);
		}

		return methodItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.Composition3Statement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Composition3StatementItemProvider composition3StatementItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.Composition3Statement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComposition3StatementAdapter() {
		if (composition3StatementItemProvider == null) {
			composition3StatementItemProvider = new Composition3StatementItemProvider(this);
		}

		return composition3StatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.SmallRepetitionStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SmallRepetitionStatementItemProvider smallRepetitionStatementItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.SmallRepetitionStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSmallRepetitionStatementAdapter() {
		if (smallRepetitionStatementItemProvider == null) {
			smallRepetitionStatementItemProvider = new SmallRepetitionStatementItemProvider(this);
		}

		return smallRepetitionStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.JavaVariables} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JavaVariablesItemProvider javaVariablesItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.JavaVariables}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJavaVariablesAdapter() {
		if (javaVariablesItemProvider == null) {
			javaVariablesItemProvider = new JavaVariablesItemProvider(this);
		}

		return javaVariablesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.JavaVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JavaVariableItemProvider javaVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.JavaVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJavaVariableAdapter() {
		if (javaVariableItemProvider == null) {
			javaVariableItemProvider = new JavaVariableItemProvider(this);
		}

		return javaVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.GlobalConditions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GlobalConditionsItemProvider globalConditionsItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.GlobalConditions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGlobalConditionsAdapter() {
		if (globalConditionsItemProvider == null) {
			globalConditionsItemProvider = new GlobalConditionsItemProvider(this);
		}

		return globalConditionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.Renaming} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenamingItemProvider renamingItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.Renaming}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenamingAdapter() {
		if (renamingItemProvider == null) {
			renamingItemProvider = new RenamingItemProvider(this);
		}

		return renamingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.Rename} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenameItemProvider renameItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.Rename}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenameAdapter() {
		if (renameItemProvider == null) {
			renameItemProvider = new RenameItemProvider(this);
		}

		return renameItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.CbCProblem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CbCProblemItemProvider cbCProblemItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.CbCProblem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCbCProblemAdapter() {
		if (cbCProblemItemProvider == null) {
			cbCProblemItemProvider = new CbCProblemItemProvider(this);
		}

		return cbCProblemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.tu_bs.cs.isf.cbc.cbcmodel.StrengthWeakStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StrengthWeakStatementItemProvider strengthWeakStatementItemProvider;

	/**
	 * This creates an adapter for a {@link de.tu_bs.cs.isf.cbc.cbcmodel.StrengthWeakStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStrengthWeakStatementAdapter() {
		if (strengthWeakStatementItemProvider == null) {
			strengthWeakStatementItemProvider = new StrengthWeakStatementItemProvider(this);
		}

		return strengthWeakStatementItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (cbCFormulaItemProvider != null) cbCFormulaItemProvider.dispose();
		if (conditionItemProvider != null) conditionItemProvider.dispose();
		if (abstractStatementItemProvider != null) abstractStatementItemProvider.dispose();
		if (skipStatementItemProvider != null) skipStatementItemProvider.dispose();
		if (compositionStatementItemProvider != null) compositionStatementItemProvider.dispose();
		if (selectionStatementItemProvider != null) selectionStatementItemProvider.dispose();
		if (repetitionStatementItemProvider != null) repetitionStatementItemProvider.dispose();
		if (methodStatementItemProvider != null) methodStatementItemProvider.dispose();
		if (variantItemProvider != null) variantItemProvider.dispose();
		if (returnStatementItemProvider != null) returnStatementItemProvider.dispose();
		if (methodItemProvider != null) methodItemProvider.dispose();
		if (composition3StatementItemProvider != null) composition3StatementItemProvider.dispose();
		if (smallRepetitionStatementItemProvider != null) smallRepetitionStatementItemProvider.dispose();
		if (javaVariablesItemProvider != null) javaVariablesItemProvider.dispose();
		if (javaVariableItemProvider != null) javaVariableItemProvider.dispose();
		if (globalConditionsItemProvider != null) globalConditionsItemProvider.dispose();
		if (renamingItemProvider != null) renamingItemProvider.dispose();
		if (renameItemProvider != null) renameItemProvider.dispose();
		if (cbCProblemItemProvider != null) cbCProblemItemProvider.dispose();
		if (strengthWeakStatementItemProvider != null) strengthWeakStatementItemProvider.dispose();
	}

}
